[
    {
        "id": "1",
        "description": "",
        "eventName": "onDelayCreateMapitem",
        "eventScript": "ini_set('display_errors', 1);\r\nini_set('log_errors', 1);\r\nerror_reporting(E_ALL);\t\t\/\/php 5 only\r\n\r\nsleep(5);\r\n\r\nCore::Emit('onDelayedCreateMapitem', $eventArgs);\r\n\r\n$headers = 'MIME-Version: 1.0' . \"\\r\\n\";\r\n$headers .= 'Content-type: text\/html; charset=iso-8859-1' . \"\\r\\n\";\r\n$headers .= 'From: ' . 'Geolive' . ' <' .\r\n    'admin@geolive.ca' . '>' . \"\\r\\n\";\r\n$to = array('nickblackwell82@gmail.com');\r\n$to = rtrim(implode(', ', $to), ',');\r\n\r\n\r\n$mapsPlugin=Core::LoadPlugin('Maps');\r\n$marker = MapController::LoadMapItem($eventArgs->id);\r\n\r\nCore::LoadPlugin('Attributes');\r\n$tableMeta = AttributesTable::GetMetadata(\"rappAttributes\");\r\n\r\nAttributesRecord::Set($marker->getId(), $marker->getType(), array(\r\n    'sent' => true,\r\n), $tableMeta);\r\n\r\n$attributes = AttributesRecord::Get($marker->getId(), $marker->getType(), $tableMeta);\r\n\r\n$data = array(\r\n\r\n    'eventArgs' => $eventArgs,\r\n    'marker' => $marker->getMetadata(),\r\n    'attributes' => $attributes,\r\n\r\n);\r\n\/\/TODO: submit to form.\r\n\r\nCore::Broadcast(\"bcwfapp\", \"notification\", $data);\r\n\r\nmail($to, 'Submitted Report (' . $marker->getId() . ') to RAPP', '<pre>' . htmlspecialchars(json_encode($data, JSON_PRETTY_PRINT)) . '<\/pre>', $headers);\r\n\r\n$mobile = Core::LoadPlugin('IOSApplication');\r\n$devices = $mobile->getUsersDeviceIds($marker->getUserId());\r\n\r\nCore::Emit(\"onNotifyDevicesAndClients\", array(\r\n    \"devices\" => $devices,\r\n    \"text\" => \"Your report has been submitted to Report All Poachers and Polluters\",\r\n    \"trigger\" => \"onCreateMapitem: (delay:180) \" . $marker->getId(),\r\n));\r\n\r\n\r\n\r\n\r\n$url = 'https:\/\/www.for.gov.bc.ca\/pscripts\/webmail\/mofwebmail.asp';\r\n\r\n$violation_details = '';\r\n\r\nCore::LoadPlugin('GoogleMaps');\r\n\r\n$coords = $marker->getCoordinates();\r\n$response = GoogleMapsGeocode::FromCoordinates($coords[0], $coords[1]);\r\nif ($response->status == 'OK') {\r\n\t$location = $response->results[0]->formatted_address;\r\n\t$violation_details .= \"  \".'Location: ' . $location . \"\\n\";\r\n}\r\n\r\n\r\n$violation_details .= \"  \".'Coordinates (lat, lng): ' . $coords[0] . ', ' . $coords[1] . \"\\n\";\r\n\/\/$violation_details .= GoogleMapsStaticMapTiles::UrlForMapitem($marker) . \"\\n\";\r\n\r\n\r\n$staticmaptile = Core::HTML()->website().'\/'.Core::HTML()->Link($mapsPlugin->urlVarsToNamedView('mapitem.staticmap'), \r\narray(\r\n    'format' => 'raw',\r\n    'mapitem' => $marker->getId(),\r\n    'size'=>'500x500'\r\n));\r\n$violation_details .=\"  \".$staticmaptile . \"\\n\\n\";\r\n\r\n$ip = Core::Client()->ipAddress();\r\n\r\n\r\n$response = Core::LoadPlugin('Geolocate')->geocodeIp($ip);\r\n\r\n\r\n$geocode = trim(trim($response->region_name . ' ' . $response->city) . ' ' . $response->zip_code);\r\n\/\/$this->fail(print_r($response, true));\r\n\r\n$comments = '';\r\n$comments .= \"  \".'This report was submitted using the BCWF RAPP mobile app'.\"\\n\";\r\n$comments .= \"  \".'Senders IP Address is: ' . $ip . ' (' . $geocode . ')'.\"\\n\\n\";\r\n\r\n$fields = array(\r\n\t'template' => 'hli\\cos\\violation-report.txt',\r\n\t'subject' => urlencode('BCWF - RAPP Violation Report'),\r\n\t'redirect-url' => '\/hli\/cos\/rapp-thank-you.html',\r\n\t'origin' => '',\r\n\t'comp_name' => 'n\/a 1',\r\n\t'comp_address' => 'n\/a 2',\r\n\t'comp_phone' => 'n\/a 3',\r\n\t'comp_email' => 'n\/a 4',\r\n\t'violation_details' => urlencode($violation_details),\r\n\t'violator_description' => 'b',\r\n\t'transport_involved' => 'c',\r\n\t'witnesses' => 'd',\r\n\t'comments' => urlencode($comments),\r\n\t'test' => 'report',\r\n\t'toEmail' => 'nickblackwell82@gmail.com, jon.corbett@gmail.com', \/\/ 'SGPEP.ECC1@gov.bc.ca',\r\n\t'fromEmail' => 'bcwf.geolive@gov.bc.ca', \/\/'SGPEP.ECC1@gov.bc.ca',\r\n);\r\n\r\n\r\nCore::Emit(\"onSubmitRAPPReportForItem\", array(\r\n\t\"item\"=>$marker->getId(),\r\n\t\"post\"=>$fields,\r\n));\r\n\r\n\/\/$this->fail(print_r($fields));\r\n\r\n$fields_string = '';\r\nforeach ($fields as $key => $value) {\r\n\t$fields_string .= $key . '=' . $value . '&';\r\n}\r\nrtrim($fields_string, '&');\r\n$ch = curl_init();\r\ncurl_setopt($ch, CURLOPT_URL, $url);\r\ncurl_setopt($ch, CURLOPT_POST, count($fields));\r\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $fields_string);\r\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n\r\n$result = curl_exec($ch);\r\ncurl_close($ch);\r\n\r\nCore::Emit(\"onSubmitedRAPPReportForItem\", array(\r\n\t\"item\"=>$marker->getId(),\r\n\t\"response\"=>$result\r\n));\r\n\r\n\r\n\r\nforeach ($devices as $device) {\r\n    Core::Broadcast(\"bcwfapp.\" . $device, \"notification\", array(\"text\" => \"Your report has been submitted to Report All Poachers and Polluters\"));\r\n}\r\n\r\nCore::Broadcast(\"user.\" . $marker->getUserId(), \"notification\", array(\"text\" => \"Your report has been submitted to Report All Poachers and Polluters\"));"
    },
    {
        "id": "2",
        "description": "",
        "eventName": "onViewImage",
        "eventScript": "$file = $eventArgs->image;\r\n$user = $eventArgs->user;\r\n\r\n\/\/Core::Emit(\"onNotifyDevices\", array(\"file\"=>$file));\r\n\r\n$uid = $user;\r\n\/\/Core::Emit(\"onNotifyDevices\", array(\"uid\"=>$uid));\r\n\r\n$mobile = Core::LoadPlugin('IOSApplication');\r\n$devices = $mobile->getUsersDeviceIds($uid);\r\n\r\nCore::LoadPlugin('Maps');\r\n$marker = MapController::LoadMapItem($eventArgs->item);\r\n\r\n$images = Core::HTML()->parseImageUrls($marker->getDescription());\r\n$images = array_map(function ($i) {\r\n\r\n    if (strpos($i, 'http') !== 0) {\r\n        return Core::HTML()->website() . '\/' . ltrim($i, '\/');\r\n    }\r\n\r\n}, array_merge($images, Core::HTML()->parseVideoPosterUrls($marker->getDescription())));\r\n\r\n$data = array(\r\n    \"devices\" => $devices,\r\n    \"text\" => \"An administrator has viewed your report\",\r\n    \"trigger\" => \"onViewImage: \" . $file,\r\n    'item' => $marker->getMetadata(),\r\n);\r\n\r\nif (count($images)) {\r\n    $data['image'] = $images[0];\r\n}\r\n\r\nCore::Emit(\"onNotifyDevicesAndClients\", $data);\r\n\r\nCore::LoadPlugin('Attributes');\r\n$tableMeta = AttributesTable::GetMetadata(\"rappAttributes\");\r\n\r\nAttributesRecord::Set($eventArgs->item, $eventArgs->type, array(\r\n    'viewed' => true,\r\n), $tableMeta);\r\n\r\nforeach ($devices as $device) {\r\n    Core::Broadcast(\"bcwfapp.\" . $device, \"notification\", $data);\r\n}\r\n\r\nCore::Broadcast(\"user.\" . $uid, \"notification\", $data);"
    },
    {
        "id": "3",
        "description": "",
        "eventName": "onCreateMapItem",
        "eventScript": "Core::Emit('onDelayCreateMapitem', $eventArgs);"
    }
]